name: Elixir CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

env:
  MIX_ENV: prod
  AWS_ASSETS_BUCKET_NAME: mehungry-main-bucket 
  AWS_ACCESS_KEY_ID: AKIAQFLZDOL4D3NPTDND 
  AWS_SECRET_ACCESS_KEY: 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
  FACEBOOK_CLIENT_ID: 902631176539278
  FACEBOOK_CLIENT_SECRET: 9b4b943448f4282c70e06a590ee4d7c1
  GOOGLE_CLIENT_ID: 247808283378-33oecc4i17juadkk76m2sg20ts8ko128.apps.googleusercontent.com
  GOOGLE_CLIENT_SECRET: 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
  SECRET_KEY_BASE: mhnHqlDrVl11yiMKfXf62RyDEW31iS7jTWS+jMyxJSSvSTwvNc20htRuM6wfU5kC
  
  # NOTE: make sure these versions match in Containerfile and .tool-versions
  ELIXIR_VERSION_SPEC: "1.16.2"
  OTP_VERSION_SPEC: "26.0.2"
  
jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1.16
        with:
          elixir-version: ${{ env.ELIXIR_VERSION_SPEC }}
          otp-version: ${{ env.OTP_VERSION_SPEC }}
      - name: Install dependencies
        run: mix deps.get
      - name: Compile dependencies
        run: mix deps.compile
      - name: Compile
        run: mix compile   
          
  build_and_deploy:
     # The type of runner that the job will run on
    needs: [compile]
    runs-on: ubuntu-latest

     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Runs a single command using the runners shell
      - name: docker build mehungry_app #django api
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mehungry_ecr
          IMAGE_TAG: ${{ github.sha }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          MIX_ENV: prod
          AWS_ASSETS_BUCKET_NAME: mehungry-main-bucket 
          AWS_ACCESS_KEY_ID: AKIAQFLZDOL4D3NPTDND 
          AWS_SECRET_ACCESS_KEY: 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
          FACEBOOK_CLIENT_ID: 902631176539278
          FACEBOOK_CLIENT_SECRET: 9b4b943448f4282c70e06a590ee4d7c1
          GOOGLE_CLIENT_ID: 247808283378-33oecc4i17juadkk76m2sg20ts8ko128.apps.googleusercontent.com
          GOOGLE_CLIENT_SECRET: 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
          SECRET_KEY_BASE: mhnHqlDrVl11yiMKfXf62RyDEW31iS7jTWS+jMyxJSSvSTwvNc20htRuM6wfU5kC

        run: |
          export AWS_ASSETS_BUCKET_NAME=mehungry-main-bucket 
          export AWS_ACCESS_KEY_ID=AKIAQFLZDOL4D3NPTDND 
          export AWS_SECRET_ACCESS_KEY=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
          export FACEBOOK_CLIENT_ID=902631176539278
          export FACEBOOK_CLIENT_SECRET=9b4b943448f4282c70e06a590ee4d7c1
          export GOOGLE_CLIENT_ID=247808283378-33oecc4i17juadkk76m2sg20ts8ko128.apps.googleusercontent.com
          export GOOGLE_CLIENT_SECRET=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
          export SECRET_KEY_BASE=mhnHqlDrVl11yiMKfXf62RyDEW31iS7jTWS+jMyxJSSvSTwvNc20htRuM6wfU5kC
          export SOME_APP_SSL_KEY_PATH=priv/cert/SSL_PrivateKEY_www_m3hungry_com.pem
          export SOME_APP_SSL_CERT_PATH=priv/cert/SSL_CSR_www_m3hungry_com.pem
          export MIX_ENV=prod

          docker build  -t $ECR_REGISTRY/mehungry_ecr:$IMAGE_TAG -f docker/Dockerfile .
          docker push $ECR_REGISTRY/mehungry_ecr:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


      - name: Download task definition 
        run: |
           aws ecs describe-task-definition - task-definition etap-development - query taskDefinition > task-definition.json    

      - name: Fill in new image ID in task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
           task-definition: task-definition.json 
           container-name: mehungry_app 
           image: ${{ steps.build-image.outputs.image }}
 
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1 
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: mehungry_app
          cluster: mehungry_ecs_cluster_prod
            
