{"ast":null,"code":"var _jsxFileName = \"/home/nikolis/git/mehungry_server/assets/src/js/components/Modal.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport { closeModal, showIngredientModal } from '../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = Background;\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n_c2 = ModalWrapper;\nconst ModalImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n_c3 = ModalContent;\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n_c4 = CloseModalButton;\n\nconst Modal = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n\n  const showModal = () => {\n    _s();\n\n    const modalSt = useSelector(state => state.Modal);\n\n    switch (modalSt) {\n      case \"INGREDIENT\":\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  _s(showModal, \"TQ+b1W4zlXjybI2YvbDLbCcK1x8=\", false, function () {\n    return [useSelector];\n  });\n\n  const openIngredientModal = () => {\n    dispatch(showIngredientModal);\n  };\n\n  const closeIngredientModal = () => {\n    dispatch(closeModal);\n  };\n\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      closeIngredientModal();\n      console.log('I pressed');\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(Background, {\n      onClick: closeModal,\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n          showModal: showModal,\n          children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Are you ready?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Get exclusive access to our next launch.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Join Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => setShowModal(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s2(Modal, \"Aq4Cq9BCG0W4gWDQ3Qzi+fCn/sE=\", false, function () {\n  return [useDispatch, useSpring];\n});\n\n_c5 = Modal;\nexport default Modal;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Background\");\n$RefreshReg$(_c2, \"ModalWrapper\");\n$RefreshReg$(_c3, \"ModalContent\");\n$RefreshReg$(_c4, \"CloseModalButton\");\n$RefreshReg$(_c5, \"Modal\");","map":{"version":3,"sources":["/home/nikolis/git/mehungry_server/assets/src/js/components/Modal.js"],"names":["React","useRef","useEffect","useCallback","useSpring","animated","styled","MdClose","closeModal","showIngredientModal","useSelector","useDispatch","Background","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","Modal","dispatch","showModal","modalSt","state","openIngredientModal","closeIngredientModal","modalRef","animation","config","duration","opacity","transform","keyPress","e","key","console","log","setShowModal","document","addEventListener","removeEventListener","prev"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport {closeModal, showIngredientModal} from '../actions'\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\nconst ModalImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst Modal = () => {\n\n  const dispatch = useDispatch();\n\n  const showModal  = () => {\n    const modalSt = useSelector(state => state.Modal);\n    switch (modalSt) {\n      case \"INGREDIENT\":\n        return true;\n      default: \n        return false;\n\n    } \n  }\n\n  const openIngredientModal = () => {\n    dispatch(showIngredientModal)\n  }\n  const closeIngredientModal = () => {\n    dispatch(closeModal)\n  }\n\n\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        closeIngredientModal();\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n                <h1>Are you ready?</h1>\n                <p>Get exclusive access to our next launch.</p>\n                <button>Join Now</button>\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}