{"ast":null,"code":"var _jsxFileName = \"/home/nikolis/git/mehungry_server/assets/src/js/components/forms/RecipeForm.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport RecipeIngredientForm from './RecipeIngredientForm';\nimport styled from 'styled-components';\nimport { Modal } from '../Modal';\nimport { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport { closeModal, showIngredientModal } from '../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  min-width: 100px;\n  padding: 16px 32px;\n  border-radius: 4px;\n  border: none;\n  background: #141414;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n_c = Button;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst RecipeForm = ({\n  onSearch,\n  ingredients\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n  const initialValue = [{\n    id: 0,\n    name: 'some ingredient name',\n    measurement_unit: 'some measurement unit',\n    quantity: 23.4\n  }];\n  const [ingredientEntries, setIngredientEntries] = useState(initialValue);\n  const listItems = ingredientEntries.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: number.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n\n  const openIngredientModal = () => {\n    dispatch(showIngredientModal());\n  };\n\n  const addIngredientEntry = item => {\n    console.log(item);\n    const newList = ingredientEntries.concat(item);\n    setIngredientEntries(newList);\n  };\n\n  const closeModal = () => {\n    dispatch(closeModal());\n  };\n\n  const modalOpen = () => {\n    _s();\n\n    const modalVal = useSelector(state => state.modalReducer);\n\n    switch (modalVal) {\n      case \"INGREDIENT\":\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  _s(modalOpen, \"zPZcBuKjIoG5KwuuCMYRg2e7HDs=\", false, function () {\n    return [useSelector];\n  });\n\n  const showModal = modalOpen();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modalOpen() ? /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal,\n      onSearch: onSearch,\n      ingredients: ingredients,\n      addIngredientEntry: addIngredientEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openIngredientModal,\n      children: \"Add Ingredient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), listItems]\n  }, void 0, true);\n};\n\n_s2(RecipeForm, \"IETc6wB1xKZ/V++YJ/sYMz2+Asg=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = RecipeForm;\nexport default RecipeForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"RecipeForm\");","map":{"version":3,"sources":["/home/nikolis/git/mehungry_server/assets/src/js/components/forms/RecipeForm.js"],"names":["React","RecipeIngredientForm","styled","Modal","useState","NavLink","Link","closeModal","showIngredientModal","useSelector","useDispatch","Button","button","Container","div","RecipeForm","onSearch","ingredients","dispatch","initialValue","id","name","measurement_unit","quantity","ingredientEntries","setIngredientEntries","listItems","map","number","openIngredientModal","addIngredientEntry","item","console","log","newList","concat","modalOpen","modalVal","state","modalReducer","showModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAO,IAAIC,IAApB,QAAgC,kBAAhC;AACA,SAAQC,UAAR,EAAoBC,mBAApB,QAA8C,eAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,MAAM,GAAGT,MAAM,CAACU,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,M;AAYN,MAAME,SAAS,GAAGX,MAAM,CAACY,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;;AAQA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAAA;;AAAA;;AAC9C,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,YAAY,GAAG,CAAC;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,sBAAf;AAAuCC,IAAAA,gBAAgB,EAAE,uBAAzD;AAAkFC,IAAAA,QAAQ,EAAE;AAA5F,GAAD,CAArB;AAEA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CrB,QAAQ,CAACe,YAAD,CAA1D;AAEA,QAAMO,SAAS,GAAGF,iBAAiB,CAACG,GAAlB,CAAuBC,MAAD,iBAClC;AAAA,cAAKA,MAAM,CAACP;AAAZ;AAAA;AAAA;AAAA;AAAA,UADY,CAAlB;;AAIA,QAAMQ,mBAAmB,GAAG,MAAM;AAChCX,IAAAA,QAAQ,CAACV,mBAAmB,EAApB,CAAR;AACD,GAFD;;AAGA,QAAMsB,kBAAkB,GAAIC,IAAD,IAAU;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,OAAO,GAAGV,iBAAiB,CAACW,MAAlB,CAAyBJ,IAAzB,CAAhB;AACAN,IAAAA,oBAAoB,CAACS,OAAD,CAApB;AACD,GAJD;;AAMA,QAAM3B,UAAU,GAAG,MAAM;AACvBW,IAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AACD,GAFD;;AAIA,QAAM6B,SAAS,GAAG,MAAM;AAAA;;AACtB,UAAMC,QAAQ,GAAI5B,WAAW,CAAC6B,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAA7B;;AACA,YAAQF,QAAR;AACE,WAAK,YAAL;AACE,eAAO,IAAP;;AACF;AACE,eAAO,KAAP;AAJJ;AAMD,GARD;;AAvB8C,KAuBxCD,SAvBwC;AAAA,YAwB1B3B,WAxB0B;AAAA;;AAgC9C,QAAM+B,SAAS,GAAGJ,SAAS,EAA3B;AAEE,sBACE;AAAA,eACGA,SAAS,kBAAM,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEI,SAAlB;AAA6B,MAAA,QAAQ,EAAIxB,QAAzC;AAAmD,MAAA,WAAW,EAAIC,WAAlE;AAA+E,MAAA,kBAAkB,EAAIa;AAArG;AAAA;AAAA;AAAA;AAAA,YAAN,GAAqI,IADjJ,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGH,SALH;AAAA,kBADF;AASH,CA3CD;;IAAMX,U;UACaL,W;;;MADbK,U;AA6CN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport RecipeIngredientForm from './RecipeIngredientForm'\nimport styled from 'styled-components';\nimport {Modal} from '../Modal';\nimport { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport {closeModal, showIngredientModal} from '../../actions'\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Button = styled.button`\n  min-width: 100px;\n  padding: 16px 32px;\n  border-radius: 4px;\n  border: none;\n  background: #141414;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\n\nconst RecipeForm = ({onSearch, ingredients}) => {\n  const dispatch = useDispatch();\n  const initialValue = [{ id: 0, name: 'some ingredient name', measurement_unit: 'some measurement unit', quantity: 23.4 }];\n\n  const [ingredientEntries, setIngredientEntries] = useState(initialValue)\n  \n  const listItems = ingredientEntries.map((number) =>\n        <li>{number.name}</li>\n  );\n    \n  const openIngredientModal = () => {\n    dispatch(showIngredientModal())\n  }\n  const addIngredientEntry = (item) => {\n    console.log(item)\n    const newList = ingredientEntries.concat(item);\n    setIngredientEntries(newList);\n  }\n\n  const closeModal = () => {\n    dispatch(closeModal())\n  }\n\n  const modalOpen = () => {\n    const modalVal =  useSelector(state => state.modalReducer);\n    switch (modalVal) {\n      case \"INGREDIENT\":\n        return true;\n      default: \n        return false;\n    }\n  }\n  const showModal = modalOpen();\n\n    return (\n      <>\n        {modalOpen() ? (<Modal showModal={showModal} onSearch = {onSearch} ingredients = {ingredients} addIngredientEntry = {addIngredientEntry} />) : null}\n        <Button onClick={openIngredientModal}>Add Ingredient</Button> \n        {/* <Button onClick={addIngredi}>I'Add</Button>  */}\n\n        {listItems}\n      </>\n  )\n}\n\nexport default RecipeForm"]},"metadata":{},"sourceType":"module"}