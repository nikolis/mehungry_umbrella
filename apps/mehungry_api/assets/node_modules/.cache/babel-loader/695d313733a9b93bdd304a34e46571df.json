{"ast":null,"code":"var _jsxFileName = \"/home/nikolis/git/mehungry_server/assets/src/js/components/pages/Create.js\",\n    _s = $RefreshSig$();\n\n// import CardList from '../CardList';\n// import SearchBar from '../SearchBar'\nimport { useState } from 'react';\nimport IngredientSource from '../../api/IngredientSource';\nimport IngredientSearchbox from '../forms/IngredientSearchbox';\nimport RecipeForm from '../forms/RecipeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [state, setState] = useState([]);\n\n  const onSearch = async text => {\n    const results = await IngredientSource.get(\"/api/v1/ingredient/search\", {\n      params: {\n        language: 1,\n        name: text\n      }\n    });\n    setState(prevState => {\n      let data = results.data.data;\n      console.log(data);\n      let data_proc = data.map(item => ({\n        label: item.name,\n        id: item.id\n      }));\n      console.log(data_proc);\n      return data_proc;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal,\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      children: \"I'm a modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(RecipeForm, {\n      onSearch: onSearch,\n      ingredients: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Create, \"yua82o5JV2p+bdzgVd8naWBubMo=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/nikolis/git/mehungry_server/assets/src/js/components/pages/Create.js"],"names":["useState","IngredientSource","IngredientSearchbox","RecipeForm","Create","state","setState","onSearch","text","results","get","params","language","name","prevState","data","console","log","data_proc","map","item","label","id","showModal","setShowModal","openModal"],"mappings":";;;AAAA;AACA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAO,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAC/B,EAD+B,CAAnC;;AAIA,QAAMO,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC7B,UAAMC,OAAO,GAAG,MAAMR,gBAAgB,CAACS,GAAjB,CAAqB,2BAArB,EAAkD;AACpEC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAE,CAAX;AAAcC,QAAAA,IAAI,EAAEL;AAApB;AAD4D,KAAlD,CAAtB;AAIAF,IAAAA,QAAQ,CAACQ,SAAS,IAAG;AAEjB,UAAIC,IAAI,GAAIN,OAAO,CAACM,IAAR,CAAaA,IAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIG,SAAS,GAAGH,IAAI,CAACI,GAAL,CAAUC,IAAD,KAAY;AAACC,QAAAA,KAAK,EAAED,IAAI,CAACP,IAAb;AAAmBS,QAAAA,EAAE,EAAEF,IAAI,CAACE;AAA5B,OAAZ,CAAT,CAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,aAAOA,SAAP;AACH,KAPO,CAAR;AAQH,GAbD;;AAeA,sBACI;AAAA,4BACG,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEK,SAAlB;AAA6B,MAAA,YAAY,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAIlB,QAAxB;AAAkC,MAAA,WAAW,EAAIF;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA,kBADJ;AAQH,CA5BD;;GAAMD,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["// import CardList from '../CardList';\n// import SearchBar from '../SearchBar'\nimport { useState } from 'react';\nimport IngredientSource from '../../api/IngredientSource'\nimport IngredientSearchbox from '../forms/IngredientSearchbox';\nimport RecipeForm from '../forms/RecipeForm';\n\nconst Create = () => {\n    const  [state, setState] = useState(\n        []\n    )\n\n    const onSearch = async (text) => {\n        const results = await IngredientSource.get(\"/api/v1/ingredient/search\", {\n            params: {language: 1, name: text}\n        })\n        \n        setState(prevState =>{\n            \n            let data =  results.data.data\n            console.log(data);\n            let data_proc = data.map((item) =>  ({label: item.name, id: item.id}) );\n            console.log(data_proc);\n            return data_proc\n        })\n    }\n\n    return (\n        <>\n           <Modal showModal={showModal} setShowModal={setShowModal} />  \n           <Button onClick={openModal}>I'm a modal</Button> \n           <RecipeForm onSearch = {onSearch} ingredients = {state} />\n           {/* <IngredientSearchbox onSearch = {onSearch} ingredients = {state}/> */}\n        </>\n    )\n}\n\nexport default Create\n"]},"metadata":{},"sourceType":"module"}