{"ast":null,"code":"var _jsxFileName = \"/home/nikolis/git/mehungry_server/assets/src/js/components/forms/IngredientSearchbox.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { useState } from 'react';\nimport { FormControlUnstyledContext } from '@mui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IngredientSearchbox = ({\n  onSearch,\n  ingredients,\n  setIngredient\n}) => {\n  _s();\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleChange = e => {\n    console.log(e);\n    console.log(e.target.value);\n    console.log(e.value);\n    console.log(ingredients);\n  };\n\n  const handleInput = e => {\n    const text = e.target.value;\n    setSearchText(text);\n    onSearch(searchText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    style: {\n      width: \"40%\"\n    },\n    disablePortal: true,\n    id: \"combo-box-demo\",\n    options: ingredients,\n    onInputChange: handleInput,\n    onChange: handleChange,\n    sx: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Ingredient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientSearchbox, \"OAGvOw28fBJQW7HtXCjc9nvla2M=\");\n\n_c = IngredientSearchbox;\nconst movies = [];\nexport default IngredientSearchbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientSearchbox\");","map":{"version":3,"sources":["/home/nikolis/git/mehungry_server/assets/src/js/components/forms/IngredientSearchbox.js"],"names":["React","TextField","Autocomplete","useState","FormControlUnstyledContext","IngredientSearchbox","onSearch","ingredients","setIngredient","searchText","setSearchText","handleChange","e","console","log","target","value","handleInput","text","width","params","movies"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,0BAAT,QAA2C,WAA3C;;;AAGA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA;AAAxB,CAAD,KAA4C;AAAA;;AAEtE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACI,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACD,GALD;;AAOA,QAAMU,WAAW,GAAIL,CAAD,IAAO;AACzB,UAAMM,IAAI,GAAGN,CAAC,CAACG,MAAF,CAASC,KAAtB;AACAN,IAAAA,aAAa,CAACQ,IAAD,CAAb;AACAZ,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACD,GAJD;;AAOA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAE;AAACU,MAAAA,KAAK,EAAE;AAAR,KADT;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,EAAE,EAAC,gBAHL;AAIE,IAAA,OAAO,EAAGZ,WAJZ;AAKE,IAAA,aAAa,EAAEU,WALjB;AAME,IAAA,QAAQ,EAAIN,YANd;AAOE,IAAA,EAAE,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAPN;AAQE,IAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAR3B;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9BD;;GAAMf,mB;;KAAAA,mB;AAgCN,MAAMgB,MAAM,GAAG,EAAf;AAGA,eAAehB,mBAAf","sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { useState } from 'react';\nimport { FormControlUnstyledContext } from '@mui/core';\n\n\nconst IngredientSearchbox = ({onSearch, ingredients, setIngredient}) => {\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleChange = (e) => {\n    console.log(e)\n    console.log(e.target.value)\n    console.log(e.value)\n    console.log(ingredients)\n  } \n\n  const handleInput = (e) => {\n    const text = e.target.value\n    setSearchText(text);\n    onSearch(searchText);\n  }\n\n\n  return (\n    <Autocomplete\n      style={{width: \"40%\"}}\n      disablePortal\n      id=\"combo-box-demo\"\n      options= {ingredients}\n      onInputChange={handleInput}\n      onChange = {handleChange}\n      sx={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Ingredient\" />}\n    />\n  );\n}\n\nconst movies = [\n];\n\nexport default IngredientSearchbox"]},"metadata":{},"sourceType":"module"}