{"ast":null,"code":"var _jsxFileName = \"/home/nikolis/git/mehungry_server/assets/src/js/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = Background;\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n_c2 = ModalWrapper;\nconst ModalImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n_c3 = ModalContent;\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n_c4 = CloseModalButton;\nexport const Modal = ({\n  showModal\n}) => {\n  _s();\n\n  const modalRef = useRef();\n  const dispatch = useDispatch();\n\n  const closeModalIng = () => {\n    dispatch(closeModal());\n  };\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      closeModalIng();\n      console.log('I pressed');\n    }\n  });\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(Background, {\n      onClick: closeModal,\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n          showModal: showModal,\n          children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n            children: \"sadffds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => closeModalIng()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"asdffdsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(Modal, \"k7T8ldMvhswcO2GRvGr8ybveQlU=\", false, function () {\n  return [useDispatch, useSpring];\n});\n\n_c5 = Modal;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Background\");\n$RefreshReg$(_c2, \"ModalWrapper\");\n$RefreshReg$(_c3, \"ModalContent\");\n$RefreshReg$(_c4, \"CloseModalButton\");\n$RefreshReg$(_c5, \"Modal\");","map":{"version":3,"sources":["/home/nikolis/git/mehungry_server/assets/src/js/components/Modal.js"],"names":["React","useRef","useEffect","useCallback","useSpring","animated","styled","MdClose","useDispatch","closeModal","Background","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","Modal","showModal","modalRef","dispatch","closeModalIng","animation","config","duration","opacity","transform","keyPress","e","key","console","log","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport {  useDispatch } from 'react-redux';\nimport {closeModal} from '../actions'\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\nconst ModalImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px 0 0 10px;\n  background: #000;\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const Modal = ({ showModal}) => {\n  const modalRef = useRef();\n  const dispatch = useDispatch();\n\n  const closeModalIng = () => {\n    dispatch(closeModal())\n  }\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        closeModalIng();\n        console.log('I pressed');\n      }\n    },\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n                sadffds\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => closeModalIng()}\n              />\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : <h1>asdffdsa</h1>}\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}