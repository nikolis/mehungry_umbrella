{"ast":null,"code":"var _jsxFileName = \"/home/nikolis/git/mehungry_server/assets/src/js/components/forms/RecipeForm.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport RecipeIngredientForm from './RecipeIngredientForm';\nimport styled from 'styled-components';\nimport { Modal } from '../Modal';\nimport { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport { closeModal, showIngredientModal } from '../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Step } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  min-width: 100px;\n  padding: 16px 32px;\n  border-radius: 4px;\n  border: none;\n  background: #141414;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n_c = Button;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst RecipeForm = ({\n  onSearch,\n  ingredients\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n  const initialValue = [{\n    id: 0,\n    label: \"Some label\",\n    measurement_unit: 'some measurement unit',\n    quantity: 23.4\n  }];\n  const initialStep = [{\n    text: \"\",\n    index: 0\n  }];\n  const [ingredientEntries, setIngredientEntries] = useState(initialValue);\n  const [steps, setSteps] = useState(initialStep);\n  const listItems = ingredientEntries.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [number.label, \"/ \", number.id, \"/\", number.measurement_unit, \"/\", number.quantity]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this));\n\n  const changeStep = e => {\n    console.log(e);\n    console.log(e.target.nativeEvent);\n  };\n\n  const listSteps = steps.map(step => /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: step.text,\n    onChange: changeStep\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this));\n\n  const openIngredientModal = () => {\n    dispatch(showIngredientModal());\n  };\n\n  const addIngredientEntry = item => {\n    const newList = ingredientEntries.concat(item);\n    setIngredientEntries(newList);\n  };\n\n  const closeModal = () => {\n    dispatch(closeModal());\n  };\n\n  const modalOpen = () => {\n    _s();\n\n    const modalVal = useSelector(state => state.modalReducer);\n\n    switch (modalVal) {\n      case \"INGREDIENT\":\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  _s(modalOpen, \"zPZcBuKjIoG5KwuuCMYRg2e7HDs=\", false, function () {\n    return [useSelector];\n  });\n\n  const showModal = modalOpen();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modalOpen() ? /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal,\n      onSearch: onSearch,\n      ingredients: ingredients,\n      addIngredientEntry: addIngredientEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }, this) : null, listItems, /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openIngredientModal,\n      children: \"Add Ingredient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), listSteps]\n  }, void 0, true);\n};\n\n_s2(RecipeForm, \"0qAMHZpw3u9nQGa/2EB2cv8bNCs=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = RecipeForm;\nexport default RecipeForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"RecipeForm\");","map":{"version":3,"sources":["/home/nikolis/git/mehungry_server/assets/src/js/components/forms/RecipeForm.js"],"names":["React","RecipeIngredientForm","styled","Modal","useState","NavLink","Link","closeModal","showIngredientModal","useSelector","useDispatch","Step","Button","button","Container","div","RecipeForm","onSearch","ingredients","dispatch","initialValue","id","label","measurement_unit","quantity","initialStep","text","index","ingredientEntries","setIngredientEntries","steps","setSteps","listItems","map","number","changeStep","e","console","log","target","nativeEvent","listSteps","step","openIngredientModal","addIngredientEntry","item","newList","concat","modalOpen","modalVal","state","modalReducer","showModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport RecipeIngredientForm from './RecipeIngredientForm'\nimport styled from 'styled-components';\nimport {Modal} from '../Modal';\nimport { useState } from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport {closeModal, showIngredientModal} from '../../actions'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Step } from '@mui/material';\n\nconst Button = styled.button`\n  min-width: 100px;\n  padding: 16px 32px;\n  border-radius: 4px;\n  border: none;\n  background: #141414;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\n\nconst RecipeForm = ({onSearch, ingredients}) => {\n  const dispatch = useDispatch();\n  const initialValue = [{ id: 0, label: \"Some label\", measurement_unit: 'some measurement unit', quantity: 23.4 }];\n  const initialStep = [{text: \"\", index: 0}]\n  const [ingredientEntries, setIngredientEntries] = useState(initialValue)\n  const [steps, setSteps] = useState(initialStep)\n\n  \n  const listItems = ingredientEntries.map((number) =>\n        <li>{number.label}/ {number.id}/{number.measurement_unit}/{number.quantity}</li>\n  );\n    \n  const changeStep = (e) => {\n    console.log(e)\n    console.log(e.target.nativeEvent)\n  };\n  \n  const listSteps = steps.map((step) =>\n    <input type=\"text\" value={step.text} onChange={changeStep} />\n  );\n\n  const openIngredientModal = () => {\n    dispatch(showIngredientModal())\n  }\n\n  const addIngredientEntry = (item) => {\n    const newList = ingredientEntries.concat(item);\n    setIngredientEntries(newList);\n  }\n\n  const closeModal = () => {\n    dispatch(closeModal())\n  }\n\n  const modalOpen = () => {\n    const modalVal =  useSelector(state => state.modalReducer);\n    switch (modalVal) {\n      case \"INGREDIENT\":\n        return true;\n      default: \n        return false;\n    }\n  }\n\n  const showModal = modalOpen();\n\n    return (\n      <>\n        {modalOpen() ? (<Modal showModal={showModal} onSearch = {onSearch} ingredients = {ingredients} addIngredientEntry = {addIngredientEntry} />) : null}\n        {listItems}\n        <Button onClick={openIngredientModal}>Add Ingredient</Button> \n        {listSteps}\n      </>\n  )\n}\n\nexport default RecipeForm"]},"metadata":{},"sourceType":"module"}